# The following Environment Variables should be set in GitLab.
# OpenShift:
#       OPENSHIFT_TOKEN = Create Service Account Token using CLI. Go to OpenShift Console, under Resources select Secrets, click on mybuilder to get Token
# Azure:
#       AZURE_DEPLOY_USERNAME = Go to Azure Portal, open your App, enter a username and password under the Deployment Credentials menu
#       AZURE_DEPLOY_PASSWORD = See above
# Google:
#       GOOGLE_TOKEN = Go to Google Console, open your App, go to IAM & admin menu, create a Service Account named GitLab with an Editor Role with the 'Furnish new private key' checkedin JSON format, copy the entire downloaded JSON key to the clipboard for the variable value
# Heroku:
#       HEROKU_TOKEN = Go to Heroku CLI, login, run the command heroku auth:token
#

deploy_openshift:
    image: openshift/origin-cli
    stage: deploy
    environment: openshift
    only:
        - master
    script:
        - echo "Deploying for OpenShift Cloud Platform"
        - oc login --token=$OPENSHIFT_TOKEN https://console.starter-us-west-2.openshift.com
        - oc start-build test
        - oc logout
    when: manual

deploy_azure:
    image: maven:latest
    stage: deploy
    environment: azure
    only:
        - master
    variables:
        MAVEN_CLI_OPTS: "-Pazure"
    script:
        - echo "Deploying for Azure Cloud Platform"
        - mvn -Pazure clean package
        - curl -X PUT -u $AZURE_DEPLOY_USERNAME:$AZURE_DEPLOY_PASSWORD -H 'If-Match:*' --data-binary @"./target/cloudservices.war" https://markwsserve2.scm.azurewebsites.net/api/vfs/site/wwwroot/bin/apache-tomcat-8.5.24/webapps/cloudservices.war
    when: manual

deploy_google:
    image: maven
    stage: deploy
    environment: google
    only:
        - master
    variables:
        MAVEN_CLI_OPTS: "-Pgoogle"
    script:
        - echo "Deploying for Google Cloud Platform"
        - echo $GOOGLE_TOKEN > /tmp/$CI_PIPELINE_ID.json
        - mvn -X -Pgoogle clean package
        - export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
        - echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
        - sudo apt-get update && apt-get install google-cloud-sdk
        - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
        - gcloud --quiet --project cloud-workshop-services app deploy
    after_script:
        - rm /tmp/$CI_PIPELINE_ID.json
    when: manual
    
deploy_heroku:
    image: centos
    stage: deploy
    environment: heroku
    only:
        - master
    variables:
        MAVEN_CLI_OPTS: "-Pheroku"
    script:
        - echo "Deploying for Heroku Cloud Platform"
        - yum install git -y
        - git remote add heroku https://heroku:$HEROKU_TOKEN@git.heroku.com/mark-serviceapp.git
        - git config --global user.email "markreha@mac.com"
        - git config --global user.name "Mark Reha"
        - git config --global push.default matching
        - git add -A
        - git status
        - git commit -m "Release from GitLab"
        - git push -f heroku HEAD:master
    when: manual
